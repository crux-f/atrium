# Activated by a Master level villager picking up a Inspirational Cupcake
#
# Let the player know that they can't use a Inspirational Cupcake on the same person more than once
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,nbt={Inventory:[{components:{"minecraft:custom_data":{atrium_inspirational_cupcake:1b}}}],VillagerData:{level:5}}] if entity @s[tag=atrium_specialist] run tellraw @a[tag=atrium_inspiring_villager] {"text":"(This villager has already been inspired to become a Specialist.)","italic":true,"color":"red"}
# Failure sound
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,nbt={Inventory:[{components:{"minecraft:custom_data":{atrium_inspirational_cupcake:1b}}}],VillagerData:{level:5}}] if entity @s[tag=atrium_specialist] run playsound minecraft:entity.villager.no player @a[distance=..5] ~ ~ ~ 0.5 1 0.1
# Tag the villager if the villager is a valid target
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,nbt={Inventory:[{components:{"minecraft:custom_data":{atrium_inspirational_cupcake:1b}}}],VillagerData:{level:5}}] unless entity @s[tag=atrium_specialist] run tag @s add atrium_changing_profession
# PLUGIN FIX: Tag the villager to allow it to be exempt from vanilla trade removal in the CustomVillagerTrades plugin that we use on Atrium.
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,nbt={Inventory:[{components:{"minecraft:custom_data":{atrium_inspirational_cupcake:1b}}}],VillagerData:{level:5}}] unless entity @s[tag=atrium_specialist] run tag @s add cvt_trade_override
# Success sound
execute as @a[tag=atrium_inspiring_villager] at @s if entity @n[type=villager,tag=atrium_changing_profession] run playsound minecraft:entity.villager.celebrate player @s ~ ~ ~ 0.5 1 0.1
#
# Assign new Specialist profession based on initial vanilla profession
#
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] unless entity @s[tag=atrium_specialist] run tag @s add atrium_specialist
# Particles
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] at @s unless entity @s[tag=atrium_specialist] run particle minecraft:scrape ~ ~1.25 ~ 0.25 0.5 0.25 0.5 50 normal
#
# Armorer -> Tinker
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:armorer"}} run tag @s add atrium_specialist_tinker
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:armorer"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:armorer"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:iron_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_tinker"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:8,xp:4,buy:{id:"minecraft:carved_pumpkin",count:8},sell:{id:"minecraft:emerald",count:1}},{maxUses:8,xp:4,buy:{id:"minecraft:iron_block",count:1},sell:{id:"minecraft:emerald",count:1}}]}}
# Butcher -> Chef
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:butcher"}} run tag @s add atrium_specialist_chef
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:butcher"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:butcher"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:snowball",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_chef"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:sugar",count:4,components:{"minecraft:custom_data":{atrium_sea_salt:1b},"minecraft:custom_model_data":{strings:["atrium_sea_salt"]},"minecraft:item_name":'"Sea Salt"'}},sell:{id:"minecraft:emerald",count:1}},{maxUses:8,xp:4,buy:{id:"minecraft:milk_bucket",count:1},sell:{id:"minecraft:emerald",count:1}}]}}
# Cartographer -> Collector
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cartographer"}} run tag @s add atrium_specialist_collector
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cartographer"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cartographer"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:gold_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_collector"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:3,xp:4,buy:{id:"minecraft:emerald",count:8},sell:{id:"minecraft:iron_shovel",count:1}},{maxUses:8,xp:4,buy:{id:"minecraft:rabbit_foot",count:1},sell:{id:"minecraft:emerald",count:5}}]}}
# Cleric -> Alienist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cleric"}} run tag @s add atrium_specialist_alienist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cleric"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:cleric"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:ender_pearl",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_alienist"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:emerald",count:5},sell:{id:"minecraft:ender_pearl",count:1}},{maxUses:16,xp:4,buy:{id:"minecraft:white_stained_glass",count:8,components:{"minecraft:custom_data":{atrium_crystal:1b,atrium_gleaming_crystal:1b},"minecraft:lore":['"Not much color survived,"','"but the refractions"','"are just as dazzling."'],"minecraft:enchantment_glint_override":true,"minecraft:item_name":'"Gleaming Crystal"'}},sell:{id:"minecraft:emerald",count:1}}]}}
# Farmer -> Beekeeper
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:farmer"}} run tag @s add atrium_specialist_beekeeper
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:farmer"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:farmer"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:honeycomb",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_beekeeper"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:8,xp:4,buy:{id:"minecraft:lead",count:3},sell:{id:"minecraft:emerald",count:1}},{maxUses:16,xp:4,buy:{id:"minecraft:glass_bottle",count:6},sell:{id:"minecraft:emerald",count:1}}]}}
# Fisher -> Merchant
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fisherman"}} run tag @s add atrium_specialist_merchant
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fisherman"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fisherman"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:gold_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_merchant"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:20,xp:4,buy:{id:"minecraft:emerald",count:5},buyB:{id:"minecraft:stone",count:64},sell:{id:"minecraft:player_head",count:1,components:{"minecraft:custom_data":{atrium_shipment:1b,atrium_stone_shipment:1b},"minecraft:profile":{id:[I;622679,-1008581947,-1593539288,384904868],properties:[{name:"textures",value:"eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjdhMzliZDcwZmQ1ZGI4MDU3Y2RiMzNkN2Q2OTMwZjYwMWI4YzljOTU4MTRkODRkYTUzMzMyMDZhMTAxMTYyNCJ9fX0="}]},"minecraft:lore":['"Highly tradable."'],"minecraft:item_name":'"Stone Shipment"',"minecraft:note_block_sound":"minecraft:block.stone.place"}}},{maxUses:16,xp:4,buy:{id:"minecraft:emerald",count:5},sell:{id:"minecraft:paper",count:1,components:{"minecraft:item_name":'"Trade Agreement"',"minecraft:custom_data":{atrium_trade_agreement:1b},"minecraft:lore":['" "','{"italic":false,"text":"When Used on a Master Villager:"}','{"color":"blue","italic":false,"text":"+1 Shipment Trade"}'],"minecraft:enchantment_glint_override":true,"minecraft:rarity":"uncommon"}}}]}}
# Fletcher -> Hunter
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fletcher"}} run tag @s add atrium_specialist_hunter
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fletcher"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:fletcher"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:leather",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_hunter"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:bone",count:32},sell:{id:"minecraft:emerald",count:1}},{maxUses:16,xp:4,buy:{id:"minecraft:zombie_head",count:1,components:{"minecraft:custom_data":{atrium_trophy:1b,atrium_trophy_type:"zombie"},"minecraft:lore":['{"color":"dark_green","italic":false,"text":"Zombie"}'],"minecraft:item_name":'"Hunting Trophy"'}},sell:{id:"minecraft:emerald",count:2}}]}}
# Leatherworker -> Alchemist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:leatherworker"}} run tag @s add atrium_specialist_alchemist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:leatherworker"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:leatherworker"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:iron_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_alchemist"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:9,xp:4,buy:{id:"minecraft:potion",count:1,components:{"minecraft:potion_contents":{potion:"minecraft:awkward"}}},sell:{id:"minecraft:emerald",count:1}},{rewardExp:1b,maxUses:8,xp:4,buy:{id:"minecraft:milk_bucket",count:1},sell:{id:"minecraft:emerald",count:1}}]}}
# Librarian -> Enchanter
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:librarian"}} run tag @s add atrium_specialist_enchanter
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:librarian"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:librarian"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:diamond",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_enchanter"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:experience_bottle",count:2},sell:{id:"minecraft:emerald",count:1}},{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:emerald",count:1},sell:{id:"minecraft:lapis_lazuli",count:2}}]}}
# Mason -> Architect
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:mason"}} run tag @s add atrium_specialist_architect
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:mason"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:mason"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:gold_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_architect"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:obsidian",count:8},sell:{id:"minecraft:emerald",count:1}},{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:bricks",count:16},sell:{id:"minecraft:emerald",count:1}}]}}
# Shepherd -> Artist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:shepherd"}} run tag @s add atrium_specialist_artist
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:shepherd"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:shepherd"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:black_dye",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_artist"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:12,xp:4,buy:{id:"minecraft:brush",count:1},sell:{id:"minecraft:emerald",count:2}},{rewardExp:1b,maxUses:8,xp:4,buy:{id:"minecraft:jukebox",count:1},sell:{id:"minecraft:emerald",count:3}}]}}
# Toolsmith -> Engineer
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:toolsmith"}} run tag @s add atrium_specialist_engineer
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:toolsmith"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:toolsmith"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:flint",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_engineer"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:slime_ball",count:3},sell:{id:"minecraft:emerald",count:1}},{rewardExp:1b,maxUses:12,xp:4,buy:{id:"minecraft:redstone_ore",count:8},sell:{id:"minecraft:emerald",count:1}}]}}
# Weaponsmith -> Warrior
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:weaponsmith"}} run tag @s add atrium_specialist_warrior
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:weaponsmith"}} run data remove entity @s Offers
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] if data entity @s {VillagerData:{profession:"minecraft:weaponsmith"}} run data merge entity @s {Health:50f,Xp:1,equipment:{head:{id:"minecraft:iron_nugget",count:1,components:{"minecraft:custom_model_data":{strings:["atrium_villager_specialist_warrior"]}}}},drop_chances:{head:0},attributes:[{id:"minecraft:max_health",base:50}],VillagerData:{level:1},Offers:{Recipes:[{rewardExp:1b,maxUses:16,xp:4,buy:{id:"minecraft:white_banner",count:1,components:{"minecraft:item_name":'{"translate":"block.minecraft.ominous_banner"}',"minecraft:tooltip_display":{hidden_components:["minecraft:banner_patterns"]},"minecraft:rarity":"uncommon","minecraft:banner_patterns":[{color:"cyan",pattern:"minecraft:rhombus"},{color:"light_gray",pattern:"minecraft:stripe_bottom"},{color:"gray",pattern:"minecraft:stripe_center"},{color:"light_gray",pattern:"minecraft:border"},{color:"black",pattern:"stripe_middle"},{color:"light_gray",pattern:"minecraft:half_horizontal"},{color:"light_gray",pattern:"circle"},{color:"black",pattern:"minecraft:border"}]}},sell:{id:"minecraft:emerald",count:6}},{rewardExp:1b,maxUses:6,xp:4,buy:{id:"minecraft:potion",count:1,components:{"minecraft:potion_contents":{potion:"minecraft:strong_strength"}}},sell:{id:"minecraft:emerald",count:2}}]}}
#
# Consume the Cupcake if it was used
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession] run clear @s minecraft:bread[minecraft:custom_data={atrium_inspirational_cupcake:1b}] 1
# Advancement
execute as @a[tag=atrium_inspiring_villager] at @s if entity @n[type=minecraft:villager,tag=atrium_changing_profession] run advancement grant @s only atrium:magic/very_specific_set_of_skills
# Remove the tag afterwards
execute as @a[tag=atrium_inspiring_villager] at @s as @n[type=minecraft:villager,tag=atrium_changing_profession,nbt={Inventory:[{components:{"minecraft:custom_data":{atrium_inspirational_cupcake:1b}}}],VillagerData:{level:1}}] run tag @s remove atrium_changing_profession
#
# Remove triggering tag
execute as @a[tag=atrium_inspiring_villager] run tag @s remove atrium_inspiring_villager